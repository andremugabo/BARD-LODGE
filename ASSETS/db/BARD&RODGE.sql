CREATE DATABASE BARD&RODGE;

-- Employees Table
CREATE TABLE EMPLOYEES (
    E_ID INT PRIMARY KEY AUTO_INCREMENT,
    E_REGNUMBER VARCHAR(255) UNIQUE NOT NULL,
    FIRSTNAME VARCHAR(150),
    LASTNAME VARCHAR(150),
    E_ROLE VARCHAR(50),
    E_PHONE VARCHAR(20),
    E_IDNUMBER VARCHAR(20),
    E_STATUS ENUM('1', '0') DEFAULT '1'
 -- Add other relevant columns
);

-- salary Table
CREATE TABLE SALARY(
    SALARY_ID INT PRIMARY KEY AUTO_INCREMENT,
    E_ID INT NOT NULL,
    BASIC_SALARY FLOAT NOT NULL,
    ALLOWANCE FLOAT NOT NULL,
    SALARY_STATUS ENUM('1', '0') DEFAULT '1',
    FOREIGN KEY (E_ID) REFERENCES EMPLOYEES(E_ID)
);

-- Users Table
CREATE TABLE USERS (
    U_ID INT PRIMARY KEY AUTO_INCREMENT,
    E_ID INT,
    U_NAME VARCHAR(50),
    U_PASSWORD VARCHAR(255),
    U_STATUS ENUM('1', '0') DEFAULT '1',
    FOREIGN KEY (E_ID) REFERENCES EMPLOYEES(E_ID)
 -- Add other relevant columns
);

CREATE TABLE SESSIONS (
    S_ID INT PRIMARY KEY AUTO_INCREMENT,
    S_REF VARCHAR(255) NOT NULL UNIQUE,
    DATEOCCURRED DATETIME,
    S_STATUS ENUM('OPEN', 'CLOSE') DEFAULT 'OPEN'
);

-- Metric Table
CREATE TABLE METRIC (
    M_ID INT PRIMARY KEY AUTO_INCREMENT,
    E_ID INT NOT NULL,
    S_ID INT NULL,
    M_DESC VARCHAR(255),
    DATE_OCCURRED DATE,
    FOREIGN KEY (E_ID) REFERENCES EMPLOYEES(E_ID),
    FOREIGN KEY (S_ID) REFERENCES SESSIONS(S_ID)
 -- Add other relevant columns
);

-- Product_Type Table
CREATE TABLE PRODUCT_TYPE (
    PT_ID INT PRIMARY KEY AUTO_INCREMENT,
    PT_NAME VARCHAR(50)
 -- Add other relevant columns
);

-- Product_Category Table
CREATE TABLE PRODUCT_CATEGORY (
    PC_ID INT PRIMARY KEY AUTO_INCREMENT,
    PT_ID INT,
    PC_NAME VARCHAR(50),
    FOREIGN KEY (PT_ID) REFERENCES PRODUCT_TYPE(PT_ID)
 -- Add other relevant columns
);

CREATE TABLE UNITY(
    UNITY_ID INT PRIMARY KEY AUTO_INCREMENT,
    UNITY_NAME VARCHAR(50) NOT NULL
);

CREATE TABLE PRODUCTS (
    P_ID INT PRIMARY KEY,
    P_CODE VARCHAR(255) NOT NULL,
    PC_ID INT,
    P_NAME VARCHAR(100),
    UNITY_ID INT NOT NULL,
    P_STATUS ENUM('1', '0') DEFAULT '1',
 -- Add other relevant columns
    FOREIGN KEY (PC_ID) REFERENCES PRODUCT_CATEGORY(PC_ID),
    FOREIGN KEY (UNITY_ID) REFERENCES UNITY(UNITY_ID)
);

-- Prices Table
CREATE TABLE PRICES (
    PRICE_ID INT PRIMARY KEY AUTO_INCREMENT,
    P_ID INT,
    PRICE DECIMAL(10, 2),
    STARTDATE DATE,
    ENDDATE DATE,
    PRICE_STATUS ENUM('1', '0') DEFAULT '1',
 -- Add other relevant columns
    FOREIGN KEY (P_ID) REFERENCES PRODUCTS(P_ID)
);